;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; BYTEBEAT2
; stellartux
;
; 127 +
;(random() * 64 - 32) * ((1&~t>>(11-1&~t>>10))&(1&~t>>9)) +
;((t>>16<=0)?0:(((( t * (32-5*(1&~t>>13)) / 27 ) & 0x55 )*2/3 - 32 ) * (1&~t>>9) * ((1&~t>>13&~t>>11) ^ (1&t>>14)))) +
;(((4&(t*((7&t>>11)|(8&t>>12&t>>11))/2))<<5) /3 -22) * (1&(~t>>9&~t>>8)) * (1&(t>>(16-(15&t>>14))|(t>>17))) * (1&~t>>19) +
;~t*t*(t>>14-((1&t>>18)*7&t>>12)&t>>10)%64/3 * (1&t>>19)

(bind-func bytebeat:[i64,i64]*
  (lambda (t:i64) (convert
    ;;
    (+
      (* 1 ; hats
        (- (convert (* 32.0 (random:[float]*))) 16)
        (& 1 (& (~ (>> t (- 11 (& 1 (>> (~ t) 10))))) (>> (~ t) 9)))
      )
      (* 1 ; bass
        (- (/ (& 85 (/ (* t (- 32 (* 5 (& 1 (>> (~ t) 13))))) 27)) 3) 32)
        (& 1 (>> (~ t) 9))
        (^ (& 1 (& (>> (~ t) 13) (>> (~ t) 11))) (& 1 (>> t 14)))
      )
      (* 1 ; first synth
        (- (/ (<< (& 4 (/ (* t (bor (& 7 (>> t 11)) (& 8 (& (>> t 12) (>> t 11))))) 2)) 5) 3) 22)
        (& 1 (~ (bor (>> t 9) (>> t 8))))
        (& 1 (>> t (- 16 (bor (& 15 (>> t 14)) (>> 17 t)))))
        (& 1 (>> (~ t) 19))
      )
      (* 1 ; second synth
        (/ (% (* t (~ t) (- (>> t 14) (& (* (& 1 (>> t 18)) (& 7 (>> t 12))) (>> t 10)))) 64) 3)
        (& 3 (bor (>> t 9) (>> t 10)))
        (& 1 (>> t 19))
      )
    )
    ;;
    )))

(bind-func byte-to-float:[float,[i64,i64]*,i64]*
  (lambda (bb:[i64,i64]* t:i64)
    (/ (convert (% (bb (/ (* t 80) 441)) 256)) 128.)))

; silence
(bind-func dsp:[float,float,i64,i64,float*]*
  (lambda (in time chan dat) 0.))

(bind-func dsp:[float,float,i64,i64,float*]*
  (lambda (in time chan dat)
    (* .2 (byte-to-float bytebeat time))))

(dsp:set! dsp)
